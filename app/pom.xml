<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
	<groupId>org.jboss.quickstarts.fuse</groupId>
	<artifactId>beginner-camel-eips-parent</artifactId>
	<version>1.0-SNAPSHOT</version>
</parent>
	<packaging>bundle</packaging>
	<artifactId>beginner-camel-eips</artifactId>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <version.maven-bundle-plugin>2.3.7</version.maven-bundle-plugin>
    <maven.compiler.target>1.7</maven.compiler.target>
    <maven.compiler.source>1.7</maven.compiler.source>

    <!-- the version of the BOM, defining all the dependency versions -->
    <fabric.version>1.2.0.redhat-630187</fabric.version>

    <!-- fabric8 deploy profile configuration -->
    <fabric8.profile>quickstarts-beginner-camel.eips</fabric8.profile>
    <fabric8.parentProfiles>feature-camel</fabric8.parentProfiles>
    <fabric8.features></fabric8.features>

      <!-- the version of the JBoss Fuse BOM, defining all the dependency versions -->
      <jboss.fuse.bom.version>6.3.0.redhat-187</jboss.fuse.bom.version>
	</properties>

	<!-- alternatively run this to deploy mvn deploy -DaltDeploymentRepository=releaseRepository::default::http://admin:admin@192.168.100.160:8181/maven/upload/ -->
	<distributionManagement>
		<repository>
			<id>nexus</id>
			<url>http://admin:admin123@localhost:10001/nexus/content/repositories/snapshots</url>
		</repository>
	</distributionManagement>

	<dependencies>
		<!--
		      For this example, we will be using the OSGi Blueprint XML syntax for Apache Camel.
		    -->
		    <dependency>
		      <groupId>org.apache.camel</groupId>
		      <artifactId>camel-blueprint</artifactId>
		    </dependency>

		    <!--
		      For logging, we will use SLF4J, which is also available in the container by default.
		    -->
		    <dependency>
		      <groupId>org.slf4j</groupId>
		      <artifactId>slf4j-api</artifactId>
		    </dependency>
		    <!--
		      Dependencies with scope 'test' will be ignored when installing this Fuse Application Bundle (FAB) in the container
		      but they will be available in our test classes.q
		    -->
		    <dependency>
		      <groupId>junit</groupId>
		      <artifactId>junit</artifactId>
		      <scope>test</scope>
		    </dependency>
		    <!--
		      Add the slf4j-log4j12 dependency jar for testing
		    -->
		    <dependency>
		      <groupId>org.slf4j</groupId>
		      <artifactId>slf4j-log4j12</artifactId>
		      <scope>test</scope>
		    </dependency>
	</dependencies>

	<build>
		<defaultGoal>install</defaultGoal>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${version.maven-bundle-plugin}</version>
        <extensions>true</extensions>
      </plugin>
			<plugin>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-maven-plugin</artifactId>
				<version>2.17.0.redhat-630187</version>
				<configuration>
					<useBlueprint>true</useBlueprint>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>1.2.0.redhat-630187</version>
				<executions>
                    <execution>
                        <id>fabric8-zip</id>
                        <phase>
                            package
                        </phase>
                        <goals>
                            <goal>zip</goal>
                        </goals>
                    </execution>
                </executions>
			</plugin>
		</plugins>
	</build>
</project>
